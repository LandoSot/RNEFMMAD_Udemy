{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/serenubu/Documentos/RNEFMMAD_Udemy/screens/TasksR.js\";\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { global } from \"../styles/Global\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addTask, deleteTask, didTask } from \"../store/taskAction\";\nimport { AntDesign } from '@expo/vector-icons';\n\nvar TasksR = function TasksR(_ref) {\n  var navigation = _ref.navigation;\n\n  var goToHome = function goToHome() {\n    navigation.goBack();\n  };\n\n  var dispatch = useDispatch();\n  var tasks = useSelector(function (state) {\n    return state.tasks;\n  });\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var changeHandler = function changeHandler(val) {\n    setText(val);\n  };\n\n  var submitTask = function submitTask(text) {\n    return dispatch(addTask(text));\n  };\n\n  var removeTask = function removeTask(id) {\n    return dispatch(deleteTask(id));\n  };\n\n  var finishTask = function finishTask(id) {\n    return dispatch(didTask(id));\n  };\n\n  return React.createElement(View, {\n    style: global.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: global.input,\n    placeholder: \"Add new task\",\n    onChangeText: changeHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Add task\",\n    onPress: function onPress() {\n      return submitTask(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: tasks,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: global.tasksZone,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, React.createElement(AntDesign, {\n        name: item.done ? 'checkcircle' : 'checkcircleo',\n        size: 24,\n        color: \"black\",\n        onPress: function onPress() {\n          return finishTask(item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: global.pressZone,\n        onPress: function onPress() {\n          return navigation.navigate('RenderTasks', item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: item.done ? null : {\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, item.task)), React.createElement(AntDesign, {\n        name: \"delete\",\n        size: 24,\n        color: \"black\",\n        onPress: function onPress() {\n          return removeTask(item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Back to Home\",\n    onPress: goToHome,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TasksR;","map":{"version":3,"sources":["/home/serenubu/Documentos/RNEFMMAD_Udemy/screens/TasksR.js"],"names":["React","useState","global","useSelector","useDispatch","addTask","deleteTask","didTask","AntDesign","TasksR","navigation","goToHome","goBack","dispatch","tasks","state","text","setText","changeHandler","val","submitTask","removeTask","id","finishTask","container","input","item","tasksZone","done","pressZone","navigate","fontWeight","task"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { Button, FlatList, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport { global } from '../styles/Global'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addTask, deleteTask, didTask } from '../store/taskAction'\nimport { AntDesign } from '@expo/vector-icons'\n\nconst TasksR = ({navigation}) => {\n  const goToHome = () =>{\n    navigation.goBack()\n  }\n\n  const dispatch = useDispatch()\n  const tasks = useSelector(state => state.tasks)\n  const [text, setText] = useState ('')\n  const changeHandler = (val) => { setText(val) }\n  const submitTask = (text) => dispatch(addTask(text))\n  const removeTask = id => dispatch(deleteTask(id))\n  const finishTask = id => dispatch(didTask(id))\n\n  return (\n    <View style={global.container}>\n      <TextInput\n        style={global.input}\n        placeholder = 'Add new task'\n        onChangeText=\n        {changeHandler}\n      />\n      <Button \n        title='Add task'\n        onPress={() =>\n          submitTask(text)\n        }\n      />\n      <FlatList\n        data={tasks}\n        renderItem={({ item }) => (\n        <View style = {global.tasksZone}>\n          <AntDesign \n            name={item.done ? 'checkcircle' : 'checkcircleo'} size={24} color=\"black\" \n            onPress = {() => finishTask(item.id)}\n          />\n          <TouchableOpacity \n            style = {global.pressZone}\n            onPress = {() => navigation.navigate('RenderTasks', item)}>\n            <Text style = {item.done ? null:{fontWeight:'bold'}}>{item.task}</Text>\n          </TouchableOpacity>\n          <AntDesign \n            name=\"delete\" size={24} color=\"black\" \n            onPress = {() => removeTask(item.id)}\n          />\n        </View>\n       )} \n      />\n      <Button title='Back to Home' onPress={goToHome}/>\n    </View>\n  )\n}\n\nexport default TasksR\n"]},"metadata":{},"sourceType":"module"}